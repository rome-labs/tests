name: Build and test Workflow

on:
  push:

jobs:
  prepare_env:
    runs-on: ubuntu-latest
    env:
      # Set the Branch/Ref of the github repositories to be used for building the image
      ROME_SDK_REF_NAME: "main"
      ROME_EVM_REF_NAME: "main"

      # Set the Branch/Ref of the github repository to be used for running tests scripts from
      ROME_TESTS_REF_NAME: ${{github.ref_name}} # If updating this, also update the uses in the job call-reusable-tests at bottom of this file
      
      # Set the versions of the various images to run tests against
      EVM_VERSION: "main"
      APPS_VERSION: "main"
      GETH_VERSION: "latest"
      # TESTS_VERSION: "latest"
      UNISWAP_VERSION: "latest"
      OPENZEPPELIN_VERSION: "latest"

      # Set the tests list to run 
      TESTS_LIST: "tests,uniswap_proxy,uniswap_geth"

    outputs:
      docker_image_tags: ${{ steps.prepare_docker_image_tags.outputs.docker_image_tags }}
      tests_list: ${{ steps.prepare_tests_list.outputs.tests_list }}
      rome_tests_ref_name: ${{ steps.set_rome_tests_ref.outputs.rome_tests_ref_name }}
      rome_evm_ref_name: ${{ steps.set_rome_tests_ref.outputs.rome_evm_ref_name }}
      rome_sdk_ref_name: ${{ steps.set_rome_tests_ref.outputs.rome_sdk_ref_name }}

    steps:
      - name: 'Prepare Docker Image Tags Input'
        id: prepare_docker_image_tags
        run: |
          # Use environment variables if available, otherwise default to 'latest'
          evm_ver="${{ env.EVM_VERSION || 'latest' }}"
          apps_ver="${{ env.APPS_VERSION || 'latest' }}"
          geth_ver="${{ env.GETH_VERSION || 'latest' }}"
          tests_ver="${{ env.ROME_TESTS_REF_NAME || 'latest' }}"
          uniswap_ver="${{ env.UNISWAP_VERSION || 'latest' }}"
          openzeppelin_ver="${{ env.OPENZEPPELIN_VERSION || 'latest' }}"
          
          # Create JSON object for docker_image_tags using environment variables
          docker_image_tags=$(echo "{\"evm\": \"$evm_ver\", \"apps\": \"$apps_ver\", \"geth\": \"$geth_ver\", \"tests\": \"$tests_ver\", \"uniswap\": \"$uniswap_ver\", \"openzeppelin\": \"$openzeppelin_ver\"}")
          
          echo "Docker image tags: $docker_image_tags"
          echo "docker_image_tags=$docker_image_tags" >> $GITHUB_OUTPUT

      - name: 'Prepare Tests List Input'
        id: prepare_tests_list
        run: |
          # Use TESTS_LIST environment variable or fallback to 'tests'
          tests_list="${{ env.TESTS_LIST || 'tests' }}"
          
          echo "Tests list: $tests_list"
          echo "tests_list=$tests_list" >> $GITHUB_OUTPUT
      
      - name: 'Set REF NAME'
        id: set_rome_tests_ref
        run: |
          echo "rome_tests_ref_name=${{ env.ROME_TESTS_REF_NAME || 'main' }}" >> $GITHUB_OUTPUT
          echo "rome_evm_ref_name=${{ env.ROME_EVM_REF_NAME || 'main' }}" >> $GITHUB_OUTPUT
          echo "rome_sdk_ref_name=${{ env.ROME_SDK_REF_NAME || 'main' }}" >> $GITHUB_OUTPUT

  call-reusable-build:
    uses: ./.github/workflows/reusable_wf_build.yml
    needs: prepare_env
    secrets: inherit
    with:
      rome_tests_ref_name: ${{ needs.prepare_env.outputs.rome_tests_ref_name }}
      rome_evm_ref_name: ${{ needs.prepare_env.outputs.rome_evm_ref_name || 'main' }}
      rome_sdk_ref_name: ${{ needs.prepare_env.outputs.rome_sdk_ref_name || 'main' }}
        
  call-reusable-tests:
    uses: ./.github/workflows/reusable_wf_tests.yml
    needs: [prepare_env, call-reusable-build]
    secrets: inherit
    with:
      docker_image_tags: ${{ needs.prepare_env.outputs.docker_image_tags }}
      tests_list: ${{ needs.prepare_env.outputs.tests_list }}
      rome_tests_ref_name: ${{ needs.prepare_env.outputs.rome_tests_ref_name }}

  update-latest-tag:
    runs-on: ubuntu-latest
    needs: [prepare_env, call-reusable-build, call-reusable-tests]
    if: ${{needs.prepare_env.outputs.rome_tests_ref_name == 'main'}}
    steps:
      - name: 'Login to Docker Hub'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: 'Set latest tag'
        run: |
          docker pull romelabs/tests:${{ needs.prepare_env.outputs.rome_tests_ref_name }}
          docker tag romelabs/tests:${{ needs.prepare_env.outputs.rome_tests_ref_name }} romelabs/tests:latest
          docker push romelabs/tests:latest
    