name: Reusable workflow collect logs

on:
  workflow_call:
    inputs:
      rome_tests_ref_name:
        type: string
        required: false
        default: 'main'

jobs:
  collect-logs:
    name: "Collect logs"
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: 'Checkout tests repository'
        if: always()
        uses: actions/checkout@v4
        with:
          repository: rome-labs/tests
          path: tests
          ref: ${{ inputs.rome_tests_ref_name }}
          token: ${{ secrets.GIT_ROLLUP_TOKEN }}

      - name: Download all logs
        if: always()
        uses: actions/download-artifact@v4
        with:
          pattern: logs-for-*
          path: tests/records/
          merge-multiple: true

      - name: List downloaded logs
        if: always()
        run: ls -l tests/records/

      - name: 'Generate test reports'
        if: always()
        run: |
          cd tests
          chmod +x ./ci/scripts/generate_ctrf.sh
          ./ci/scripts/generate_ctrf.sh
          echo "Test results file content:"
          ls -l
          ls -l records
        shell: bash

      - name: 'Send test results to Slack'
        run: |
          echo "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          export SLACK_WEBHOOK_URL='${{ secrets.SLACK_WEBHOOK_TESTING_NOTIFICATION }}'
          npx slack-ctrf results ./tests/records/test_results.json -t "Testing summary for EVM contract"
        if: always()

      - name: Publish CTRF Test Summary Results
        if: always()
        uses: ctrf-io/github-test-reporter@v1
        with:
          report-path: './tests/records/test_results.json'
          summary-report: true
          test-report: true
          failed-report: true
          skipped-report: true

      - name: 'Tar logs from records folder'
        run: tar cvzf ./logs.tgz ./tests/records
        if: always()

      - name: Upload logs to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: logs.tgz
          path: ./logs.tgz
        if: always()

      - name: Post to a Slack channel
        id: slackmessage
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: 'testing-notifications'
          slack-message: "GitHub build result: ${{ job.status }}\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        if: always()

      - name: 'Parse tests results'
        if: always()
        run: |
          sudo apt-get install jq
          FAILED_TESTS=$(jq '.results.summary.failed' ./tests/records/test_results.json)
          if [ "$FAILED_TESTS" -gt 0 ]; then
            echo "Tests finished with errors: $FAILED_TESTS tests failed."
          else
            echo "All tests passed successfully."
          fi
