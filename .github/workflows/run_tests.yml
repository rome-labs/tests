name: run_tests

on:
  push:
  workflow_dispatch:

permissions:
  contents: read
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout tests repository'
        uses: actions/checkout@v4
        with:
          # path: tests
          token: ${{ secrets.GIT_ROLLUP_TOKEN }}
      - name: Install Compose
        uses: ndeloof/install-compose-action@v0.0.1
        with:
          version: v2.1.0 # defaults to 'latest'
          legacy: true    # will also install in PATH as `docker-compose`
        
      - name: 'Login to Docker Hub'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: 'Run tests'
        run: |
          ls -l
          chmod +x ./scripts/evm.sh
          ./scripts/evm.sh
          chmod +x ./scripts/generate_ctrf.sh
          ./scripts/generate_ctrf.sh
          echo "Test resuls file content:"
          ls -l
          ls -l records
          cat records/rome_tests.txt
        shell: bash

      - name: 'Send test results to Slack'
        run: |
          echo "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          export SLACK_WEBHOOK_URL='${{ secrets.SLACK_WEBHOOK_TESTING_NOTIFICATION }}'
          npx slack-ctrf results ./records/test_results.json -t "Testing summary for EVM contract"
        if: always()

      - name: Publish CTRF Test Summary Results
        run: npx github-actions-ctrf summary ./records/test_results.json
        if: always()

      - name: Publish CTRF Test Detailed Results
        run: npx github-actions-ctrf tests ./records/test_results.json
        if: always()
        
      - name: 'Tar logs from records folder'
        run: tar cvzf ./logs.tgz ./records
        if: always()

      - name: Upload logs to GitHub
        uses: actions/upload-artifact@master
        with:
          name: logs.tgz
          path: ./logs.tgz
        if: always()

      - name: Post to a Slack channel
        id: slackmessage
        uses: slackapi/slack-github-action@v1.26.0
        with:
          # Slack channel id, channel name, or user id to post message.
          # See also: https://api.slack.com/methods/chat.postMessage#channels
          # You can pass in multiple channels to post to by providing a comma-delimited list of channel IDs.
          channel-id: 'testing-notifications'
          # For posting a simple plain text message
          slack-message: "GitHub build result: ${{ job.status }}\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        if: always()
        
      - name: 'Parse tests results'
        run: |
          sudo apt-get install jq         
          FAILED_TESTS=$(jq '.results.summary.failed' records/test_results.json)  
          if [ "$FAILED_TESTS" -gt 0 ]; then
            echo "Tests finished with errors: $FAILED_TESTS tests failed."
            exit 1;
          else
           echo "All tests passed successfully."
          fi


 
      
        
